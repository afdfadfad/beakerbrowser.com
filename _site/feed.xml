<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Beaker Browser</title>
    <description></description>
    <link>https://beakerbrowser.com/</link>
    <atom:link href="https://beakerbrowser.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 05 May 2020 15:36:27 -0500</pubDate>
    <lastBuildDate>Tue, 05 May 2020 15:36:27 -0500</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Cryptographically-secure change feeds in the Dat protocol, and on the Web</title>
        <description>&lt;p class=&quot;post-summary&quot;&gt;
  &lt;a href=&quot;https://datproject.org&quot;&gt;Dat&lt;/a&gt; uses an append-only feed that’s inspired by Certificate Transparency to create auditable change logs in file archives. We use this to deliver Web applications securely in Beaker.
&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://beakerbrowser.com/docs/inside-beaker/&quot;&gt;Decentralized Archive Transport Protocol (Dat)&lt;/a&gt; uses append-only feeds to internally represent its file archives. Each time you make a change, a &lt;code class=&quot;highlighter-rouge&quot;&gt;put&lt;/code&gt; or a &lt;code class=&quot;highlighter-rouge&quot;&gt;del&lt;/code&gt; is appended to the feed.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rev1. put /index.html '&amp;lt;h1&amp;gt;hi!&amp;lt;/h1&amp;gt;'
rev2. put /styles.css '* { color: red }'
rev3. put /styles.css '* { color: blue }'
rev4. put /main.js    'console.log(&quot;hi&quot;)'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is how the archive is versioned. Each change creates a revision, and each revision can be kept for later reading. This enables historic checkouts:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;archive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;checkout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/styles.css'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// =&amp;gt; '* { color: red }'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here’s another example:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// revision 2 doesnt have a main.js yet&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;archive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;checkout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'index.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'styles.css'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In Beaker, you can access historic versions of sites by URL. Here, for instance, is the URL to revision 100 of our website: &lt;a href=&quot;dat://beakerbrowser.com+100/&quot;&gt;dat://beakerbrowser.com+100/&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;dissecting-the-feed&quot;&gt;Dissecting the feed&lt;/h2&gt;

&lt;p&gt;So now we know there’s an append-only feed inside the files archive. But, what’s inside the append-only feed?&lt;/p&gt;

&lt;p&gt;Internally, Dat represents the append-only feed with a signed merkle tree.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/img/posts/cryptographically-secure-change-feeds/signed-tree.png&quot; /&gt;
&lt;figcaption&gt;The signed merkle-tree&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The hashes of the entries in the feed act as the leaves of the tree. Each time an entry is added, a matching leaf is added, and the tree produces a new root.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/img/posts/cryptographically-secure-change-feeds/growing-tree.gif&quot; /&gt;
&lt;figcaption&gt;Entries added to the append-only feed&lt;br /&gt;will grow the tree&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Each root hash is signed. Consumers of the feed will already have the public key, because the file archive is addressed by its public key, so they can easily check the signature.&lt;/p&gt;

&lt;p&gt;This provides authentication and integrity. Now, what about the append-only constraint?&lt;/p&gt;

&lt;h2 id=&quot;enforcing-the-append-only-constraint&quot;&gt;Enforcing the append-only constraint&lt;/h2&gt;

&lt;p&gt;It’s important that the change-feeds &lt;em&gt;really are&lt;/em&gt; append-only.&lt;/p&gt;

&lt;p&gt;Why? In Beaker, Dat archives contain Web applications. Our goal is to support end-to-end secrecy of user data, so it’s very important that we can trust the software.&lt;/p&gt;

&lt;aside class=&quot;highlight&quot;&gt;
  One reason that the Web has historically lacked end-to-end secrecy is that all Web applications have to trust a third party — the host. But this deficiency is unique to the services-based Web. In the peer-to-peer Web, the application has no host, and we can use signatures and integrity checks to audit the software.
&lt;/aside&gt;

&lt;p&gt;We want a “uniform distribution” of all applications. If it were possible for a developer to distribute multiple versions of their code, then they could deliver one version of the app to most users, and deliver a compromised version to a single target. We call this a “targeted payload” attack.&lt;/p&gt;

&lt;p&gt;In Dat, this would be visible as multiple histories to the archive.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/img/posts/cryptographically-secure-change-feeds/targeted-payloads.png&quot; /&gt;
&lt;figcaption&gt;The targeted payload creates its own alternate history&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;To prevent targeted payloads, it’s important that all peers receive the exact same changes feed. That way, it’s not possible to compromise the application for one single user: the attack has to be distributed to all users, where it’s more likely to be noticed.&lt;/p&gt;

&lt;p&gt;The signed Merkle tree helps us accomplish that goal. In the Merkle tree, the root hash represents the full history of feed. If you make a change to the history, the root will change.&lt;/p&gt;

&lt;p&gt;Therefore, any recipient can query other peers to ask, “Is this the same root hash that you have?”&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/img/posts/cryptographically-secure-change-feeds/checkin.gif&quot; /&gt;
&lt;figcaption&gt;Peers compare their root hashes&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;If the hashes don’t match, then the consumer knows they have been tricked. And because the hashes are signed, the consumer can prove to the network that the author created a split history.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/img/posts/cryptographically-secure-change-feeds/snitch.gif&quot; /&gt;
&lt;figcaption&gt;A peer that finds mismatched hashes can alert the network&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;If any of this sounds familiar, it might be because this is the &lt;a href=&quot;https://www.certificate-transparency.org/log-proofs-work&quot;&gt;same design used by Certificate Transparency to create its auditable certificate logs&lt;/a&gt;. The Dat protocol has generalized the structure, for distributing data feeds and file archives (and, soon, KV databases).&lt;/p&gt;

&lt;p&gt;This feature is one of the reasons we chose the Dat protocol: it has paranoia built in!&lt;/p&gt;

&lt;h2 id=&quot;what-about-a-blockchain&quot;&gt;What about a blockchain?&lt;/h2&gt;

&lt;p&gt;Some people have noted: if you want to have a high degree of auditability, why not use a blockchain?&lt;/p&gt;

&lt;h3 id=&quot;the-argument-for-blockchains&quot;&gt;The argument for blockchains&lt;/h3&gt;

&lt;p&gt;Blockchains enforce global consensus on writes. Therefore, the same goal of auditability could be accomplished by writing the archive histories to the blockchain. In fact, in some ways this would be more secure, because it would &lt;em&gt;force&lt;/em&gt; consumers to check in with the global network before accepting an archive.&lt;/p&gt;

&lt;h3 id=&quot;the-argument-against-blockchains&quot;&gt;The argument against blockchains&lt;/h3&gt;

&lt;p&gt;It involves more overhead than is necessary. Using a blockchain means that an author needs to be connected to the global network to complete writes. This is slower than Dat’s local writes, and requires a transaction fee. Further, it leads to a bloated history, as all peers running the blockchain will have to synchronize every archive history that’s published. Did we mention it’s slower?&lt;/p&gt;

&lt;p&gt;We think the signed Merkle tree provides the right tradeoff of efficiency and security.&lt;/p&gt;

&lt;h2 id=&quot;wrapping-up&quot;&gt;Wrapping up&lt;/h2&gt;

&lt;p&gt;To summarize: The Dat protocol uses an append-only feed to internally represent its file archives. The feed represents the changes that have occurred to the archive, and can be used to pull old versions from history.&lt;/p&gt;

&lt;p&gt;The append-only feed is constructed as a signed Merkle tree, to verify authorship and data integrity. The protocol uses the root hashes of the tree to enforce the append-only constraint, thereby reducing the potential for targeted payloads.&lt;/p&gt;

&lt;p&gt;This is a powerful featureset that radically improves the transparency of data and software, and it’s one of the key reasons we chose Dat over IPFS or BitTorrent.&lt;/p&gt;
</description>
        <pubDate>Mon, 19 Jun 2017 00:00:00 -0500</pubDate>
        <link>https://beakerbrowser.com/2017/06/19/cryptographically-secure-change-feeds.html</link>
        <guid isPermaLink="true">https://beakerbrowser.com/2017/06/19/cryptographically-secure-change-feeds.html</guid>
        
        
      </item>
    
      <item>
        <title>Forking websites on the peer-to-peer Web</title>
        <description>&lt;p&gt;One of the most interesting phenomena on the Web is the popularity of services like &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt;, &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;, and &lt;a href=&quot;https://glitch.com&quot;&gt;Glitch&lt;/a&gt;, which provide tools for sharing, duplicating, and remixing other people’s projects. The practice of learning from and using existing code as boilerplate is a critical piece of what’s made innovation on the Web platform so open.&lt;/p&gt;

&lt;p&gt;We love these tools, and think they provide an amazing service, but what if instead of being part of a one-off service, they were a core feature of the Web platform?&lt;/p&gt;

&lt;p&gt;In Beaker, they are.&lt;/p&gt;

&lt;h2 id=&quot;open-source-websites&quot;&gt;Open-source websites&lt;/h2&gt;

&lt;p&gt;Beaker uses &lt;a href=&quot;/docs/inside-beaker/dat-files-protocol.html&quot;&gt;Dat&lt;/a&gt;, a peer-to-peer protocol for distributing and delivering websites and files. So when you visit a website in Beaker, the Dat protocol makes it possible to download every file that composes the website.&lt;/p&gt;

&lt;p&gt;This presents an interesting opportunity, which is that you can make an editable copy of those files, make changes, then publish your changes across the network.&lt;/p&gt;

&lt;aside class=&quot;highlight&quot;&gt;
  &lt;em&gt;Read more: &lt;a href=&quot;/2017/06/07/view-source-peer-to-peer.html&quot;&gt;View source on the peer-to-peer Web&lt;/a&gt;&lt;/em&gt;
&lt;/aside&gt;

&lt;h2 id=&quot;forking-websites-in-beaker&quot;&gt;Forking websites in Beaker&lt;/h2&gt;

&lt;p&gt;In Beaker when you visit a peer-to-peer website hosted with the Dat protocol, you can fork that website, and save an editable version of it on your device.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/img/posts/forking-sites/thumbnail.png&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Once you’ve forked a peer-to-peer website, you can modify it as much or as little as you’d like! For example, if you were using a peer-to-peer social media application, you could fork the original app to modify its tools for muting users, or even just to create a new decorative skin for your profile.&lt;/p&gt;

&lt;p&gt;We’re really excited about the potential of forking being a core feature of the Web platform. In the future, we’ll talk about the P2P + Services stack, and explain how modern applications can be built without a hard dependency on remote hosts and data silos. In the meantime, you can read more on the topic in &lt;a href=&quot;https://pfrazee.github.io/blog/achieving-scale&quot;&gt;Paul Frazee’s post on achieving scale on the peer-to-peer Web&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 14 Jun 2017 00:00:00 -0500</pubDate>
        <link>https://beakerbrowser.com/2017/06/14/forking-websites-on-the-p2p-web.html</link>
        <guid isPermaLink="true">https://beakerbrowser.com/2017/06/14/forking-websites-on-the-p2p-web.html</guid>
        
        
      </item>
    
      <item>
        <title>View source on the peer-to-peer Web</title>
        <description>&lt;p&gt;The spirit of openness has been baked into the Web since its formation. The Web was built to share
documents written in &lt;em&gt;plain text&lt;/em&gt; that could be downloaded and viewed transparently.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/img/posts/view-source/netscape-view-source.gif&quot; /&gt;
&lt;figcaption&gt;Early View source (&lt;a href=&quot;http://ueu.co/what-the-browsers-dont-show-you/&quot;&gt;ueu.co&lt;/a&gt;)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;But most Web applications aren’t composed of open documents anymore. Most
are delivered as bundled, minified, and indecipherable versions of the original source.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/img/posts/view-source/minified-js.png&quot; /&gt;
&lt;figcaption&gt;View source on a file when a source map isn't available&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;From &lt;a href=&quot;https://www.greaterthancode.com/podcast/episode-020-jenn-schiffer/&quot;&gt;Jenn Schiffer’s Greater Than Code interview&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote class=&quot;big&quot;&gt;View source is not really a thing that a lot of new developers have access to when they want to learn how to build more sophisticated applications, which is unfortunate.&lt;/blockquote&gt;

&lt;p&gt;We agree. The Web is the fabric of so much innovation and creativity, but unfortunately the complexity of Web applications has introduced a significant barrier to learning and exploring.&lt;/p&gt;

&lt;h2 id=&quot;view-source-in-peer-to-peer-websites&quot;&gt;View source in peer-to-peer websites&lt;/h2&gt;

&lt;p&gt;In Beaker, we use the &lt;a href=&quot;/docs/inside-beaker/dat-files-protocol.html&quot;&gt;Dat peer-to-peer
protocol&lt;/a&gt; to host files and
websites. Dat is similar to BitTorrent, but maintains many of the same characteristics as HTTP.&lt;/p&gt;

&lt;p&gt;With Dat, instead of downloading just one file associated with a single &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt;
request, you download a file listing, and can view any file from that listing.&lt;/p&gt;

&lt;p&gt;This changes the entire dynamic of how View source works, because now you can
see the whole site!&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/img/posts/view-source/beaker-view-source.jpg&quot; /&gt;
&lt;figcaption&gt;&lt;code&gt;beaker://view-source&lt;/code&gt; for a Dat website&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;With Beaker and Dat, you can still minify your source code, but you can ship the original source too. This means
users can view the entire set of files used to generate the application code ― including all source files and build tools.&lt;/p&gt;

&lt;h2 id=&quot;an-open-source-web&quot;&gt;An open source Web&lt;/h2&gt;

&lt;p&gt;This is just one example of how the &lt;a href=&quot;/docs/inside-beaker/dat-files-protocol.html&quot;&gt;Dat protocol&lt;/a&gt; brings radical transparency and connectivity to the Web, and we’re really excited about its potential.&lt;/p&gt;

&lt;p&gt;Soon we’ll tell you about &lt;a href=&quot;/docs/using-beaker/forking-sites.html&quot;&gt;forking websites&lt;/a&gt; in Beaker, and how it enables a a truly open-source Web.&lt;/p&gt;
</description>
        <pubDate>Wed, 07 Jun 2017 00:00:00 -0500</pubDate>
        <link>https://beakerbrowser.com/2017/06/07/view-source-peer-to-peer.html</link>
        <guid isPermaLink="true">https://beakerbrowser.com/2017/06/07/view-source-peer-to-peer.html</guid>
        
        
      </item>
    
      <item>
        <title>0.7.2: Self-mutating websites and Dat picker</title>
        <description>&lt;h2 id=&quot;self-mutating-websites-&quot;&gt;Self-mutating websites 📝&lt;/h2&gt;

&lt;p&gt;Beaker now allows applications to modify their own files using the &lt;a href=&quot;https://beakerbrowser.com/docs/apis/dat.html&quot;&gt;DatArchive API&lt;/a&gt;. This enables a model for simple, self-contained web apps such as wikis and todo lists. This decision is part of an &lt;a href=&quot;https://github.com/beakerbrowser/beaker/issues/483&quot;&gt;ongoing security discussion&lt;/a&gt;. We’ll blog about this soon.&lt;/p&gt;

&lt;h2 id=&quot;dat-garbage-collector-&quot;&gt;Dat Garbage Collector 🗑&lt;/h2&gt;

&lt;p&gt;This is something you probably thought Beaker already did. Surprise! We just got around to it.&lt;/p&gt;

&lt;p&gt;As you browse Dat sites, you collect a cache of files which stay on your disk so that reloads are fast. The “Garbage Collector” clears out those cache files after 5 days of no access. The collector does not delete files of dats that the user has saved to their library.&lt;/p&gt;

&lt;h2 id=&quot;dat-picker-api-&quot;&gt;Dat picker API 👆&lt;/h2&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://twitter.com/taravancil&quot;&gt;@taravancil&lt;/a&gt; we now have an API for selecting an archive from the user’s library, using a modal dialog. Think of this like the file-picker, for Dat archives. It includes the ability to create a new archive, if the user chooses.&lt;/p&gt;

&lt;p&gt;Example usecase: a text editor would use this API to prompt the user for the Dat they want to edit.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;archive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DatArchive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selectArchive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Select an archive&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;buttonLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Submit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;filters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isOwner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;figure&gt;
&lt;img src=&quot;/img/posts/beaker-0-7-2/dat-picker.jpg&quot; /&gt;
&lt;figcaption&gt;The Dat picker lets users choose a Dat from their library&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;fixes-and-smaller-updates-&quot;&gt;Fixes and smaller updates ✨&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Fix the auto updater&lt;/li&gt;
  &lt;li&gt;UI improvements to the Library page&lt;/li&gt;
  &lt;li&gt;Fix: Don’t let the permissions prompt cause Dat API operations to timeout (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/pull/496&quot;&gt;#496&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Add support for HTTP sites in beaker://view-source (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/pull/493&quot;&gt;#493&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Add bulk delete to the library (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/pull/479&quot;&gt;#479&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fix: Handle publishing large files without UI errors (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/issues/476&quot;&gt;#476&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Slugify folder names in the &lt;code class=&quot;highlighter-rouge&quot;&gt;~/Sites&lt;/code&gt; directory (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/issues/477&quot;&gt;#477&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Track the staging-area size less ignored files (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/issues/471&quot;&gt;#471&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Add support for HTTP Basic Auth (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/pull/475&quot;&gt;#475&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-to-install&quot;&gt;How to install&lt;/h2&gt;

&lt;p&gt;If you already have Beaker installed on OSX, you can use the auto-updater to get the latest version. &lt;strong&gt;However, &lt;a href=&quot;https://twitter.com/BeakerBrowser/status/869230831935606785&quot;&gt;due to a bug in Beaker 0.7&lt;/a&gt;, you will need to use the settings page.&lt;/strong&gt;&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/img/posts/beaker-0-7-1/settings-page.jpg&quot; /&gt;
&lt;figcaption&gt;Open the settings page from the browser menu to access the auto-updater UI&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;If you’re running Linux or if you’re new to Beaker, &lt;a href=&quot;/install/&quot;&gt;download the new version here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 05 Jun 2017 00:00:00 -0500</pubDate>
        <link>https://beakerbrowser.com/2017/06/05/beaker-0-7-2.html</link>
        <guid isPermaLink="true">https://beakerbrowser.com/2017/06/05/beaker-0-7-2.html</guid>
        
        
      </item>
    
      <item>
        <title>0.7.1: Swarm debugger</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Added a &lt;a href=&quot;https://www.youtube.com/watch?v=U2B9mwRFE8U&quot;&gt;new intro video&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Added the “Swarm debugger” for diagnosing failed P2P connectivity (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/pull/467&quot;&gt;#467&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fix a corruption event in Dat which occurred on deletions (&lt;a href=&quot;https://github.com/mafintosh/append-tree/commit/da83f68d75750fc2bc9ebced81a387b97c0e9e6a&quot;&gt;append-tree@da83f68&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Improved reliability of P2P swarming (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/commit/894362b44278263a6c2a4d52b073526ca2b4dc5b&quot;&gt;beaker@894362b&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed an issue where the library file-listing header would duplicate itself (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/commit/329420c56d1aa1b47a2614d143bb9bb78bcae156&quot;&gt;beaker@329420c&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed a bug that caused the browser UI to zoom (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/commit/e2eee2fa141a4b555608c2347926339c7d01eb58&quot;&gt;beaker@e2eee2f&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fixed an exception that was caused by deleted files/folders in Dat Archives (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/issues/463&quot;&gt;beaker#463&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;swarm-debugger&quot;&gt;Swarm debugger&lt;/h2&gt;

&lt;p&gt;The swarm debugger is a tool for technical users to diagnose connectivity problems.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/img/posts/beaker-0-7-1/swarm-debugger.png&quot; /&gt;
&lt;figcaption&gt;The debugger shows active peers on the left, and connectivity events on the right&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Use it to detect whether a target recipient is connecting, and to watch for error events or failures.&lt;/p&gt;

&lt;h3 id=&quot;how-to-open-the-debugger&quot;&gt;How to open the debugger&lt;/h3&gt;

&lt;p&gt;You can open the Swarm debugger from the library page of an archive.&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/img/posts/beaker-0-7-1/library-menu.png&quot; /&gt;
&lt;figcaption&gt;Select the Swarm debugger in the archive's library page menu&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
&lt;img src=&quot;/img/posts/beaker-0-7-1/timeout.png&quot; /&gt;
&lt;figcaption&gt;Or, click the link to the debugger when a Dat url times out&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;We’ll continue to add features to the debugger over time.&lt;/p&gt;

&lt;h2 id=&quot;how-to-install&quot;&gt;How to install&lt;/h2&gt;

&lt;p&gt;If you already have Beaker installed on OSX, you can use the auto-updater to get latest. &lt;strong&gt;However, &lt;a href=&quot;https://twitter.com/BeakerBrowser/status/869230831935606785&quot;&gt;due to a bug in Beaker 0.7&lt;/a&gt;, you will need to use the settings page.&lt;/strong&gt;&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/img/posts/beaker-0-7-1/settings-page.jpg&quot; /&gt;
  &lt;figcaption&gt;Open the settings page from the browser menu to access the auto-updater UI&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;If you’re running Linux or if you’re new to Beaker, &lt;a href=&quot;/install/&quot;&gt;download the new version here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 29 May 2017 00:00:00 -0500</pubDate>
        <link>https://beakerbrowser.com/2017/05/29/beaker-0-7-1.html</link>
        <guid isPermaLink="true">https://beakerbrowser.com/2017/05/29/beaker-0-7-1.html</guid>
        
        
      </item>
    
      <item>
        <title>0.7.0: New Dat Protocol</title>
        <description>&lt;p&gt;I’m happy to announce that &lt;a href=&quot;https://github.com/beakerbrowser/beaker/releases/tag/0.7.0&quot;&gt;Beaker 0.7&lt;/a&gt; is ready to download! You can read the full set of updates in the &lt;a href=&quot;https://github.com/beakerbrowser/beaker/releases/tag/0.7.0&quot;&gt;release notes&lt;/a&gt;. This was a big update with a lot of amazing protocol work by the &lt;a href=&quot;https://datproject.org&quot;&gt;Dat project&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;new-dat-protocol&quot;&gt;New Dat protocol&lt;/h2&gt;

&lt;p&gt;Thanks to the &lt;a href=&quot;https://datproject.org&quot;&gt;Dat Project&lt;/a&gt;, a new version of the Dat protocol has been added to Beaker, with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Huge performance gains,&lt;/li&gt;
  &lt;li&gt;file deletion now supported, and&lt;/li&gt;
  &lt;li&gt;versioned URLs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This update was not backwards compatible, so you’ll need to recreate any old Dats in the new version of Beaker.&lt;/p&gt;

&lt;h2 id=&quot;upgraded-publishing-experience&quot;&gt;Upgraded publishing experience&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/img/docs/tour-new-site-publish3.jpg&quot; alt=&quot;tour-new-site-publish3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Beaker now makes it extremely easy to create peer-to-peer sites with your preferred editors and build tools. Each site is given a staging folder where you can freely make changes, then publish when ready. Live-reloading is still built in.&lt;/p&gt;

&lt;h2 id=&quot;updated-docs-site&quot;&gt;Updated docs site&lt;/h2&gt;

&lt;p&gt;We completely overhauled the docs on &lt;a href=&quot;https://beakerbrowser.com&quot;&gt;beakerbrowser.com&lt;/a&gt;, to include tutorials, information about the Dat protocol, better API docs, and more. Here are some of our favorite pages from the new docs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://beakerbrowser.com/docs/tutorials/create-a-blog.html&quot;&gt;Tutorial: Create a peer-to-peer blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://beakerbrowser.com/docs/inside-beaker/thick-applications.html&quot;&gt;Thick applications model&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://beakerbrowser.com/docs/inside-beaker/other-technologies.html&quot;&gt;Why Dat vs. other technologies?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;major-changes&quot;&gt;Major changes:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Upgraded browser shell UIs, including more clear indicators for when a site is secure/insecure.&lt;/li&gt;
  &lt;li&gt;New dropdown menu with links to your history, bookmarks, library, and more.&lt;/li&gt;
  &lt;li&gt;Better &lt;code class=&quot;highlighter-rouge&quot;&gt;beaker://library&lt;/code&gt;, with tools for managing your sites, a staging area to review your changes, and a view to monitor network traffic.&lt;/li&gt;
  &lt;li&gt;A new Dat protocol version, which has major performance improvements and a more featured protocol (versions, file deletion).&lt;/li&gt;
  &lt;li&gt;A new &lt;a href=&quot;https://beakerbrowser.com/docs/apis/dat.html&quot;&gt;DatArchive Web API&lt;/a&gt; for reading and writing Dats from the web.&lt;/li&gt;
  &lt;li&gt;New publishing experience: you now put saved/created dats in folders on your OS, and have a git-like staging area for doing work and publishing.&lt;/li&gt;
  &lt;li&gt;Basic P2P analytics: track the number of peers, and see peer history for the past hour.&lt;/li&gt;
  &lt;li&gt;Native support for &lt;a href=&quot;https://beakerbrowser.com/docs/tutorials/create-a-markdown-site.html&quot;&gt;Markdown pages&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;minor-changes&quot;&gt;Minor changes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;More Web Platform support (&lt;code class=&quot;highlighter-rouge&quot;&gt;window.prompt&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;onbeforeunload&lt;/code&gt;, custom context menus)&lt;/li&gt;
  &lt;li&gt;Added a “View source” view for Dat websites&lt;/li&gt;
  &lt;li&gt;You can now set a background for your start page in &lt;code class=&quot;highlighter-rouge&quot;&gt;beaker://settings&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;The error pages for TLS errors more clearly indicate what went wrong&lt;/li&gt;
  &lt;li&gt;Too many bugfixes to count!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;deprecations&quot;&gt;Deprecations:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Deprecated: &lt;code class=&quot;highlighter-rouge&quot;&gt;bkr&lt;/code&gt; command line tool. With the improved builtin publishing experience, we felt it would be better to reduce the amount of software users need to install and learn.&lt;/li&gt;
  &lt;li&gt;Deprecated: IPFS support. We’ve decided to use Dat exclusively.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This release changed the internal data model of Beaker. Unfortunately that means your old Dats and bookmarks will be lost.&lt;/p&gt;
</description>
        <pubDate>Thu, 25 May 2017 00:00:00 -0500</pubDate>
        <link>https://beakerbrowser.com/2017/05/25/beaker-0-7-0.html</link>
        <guid isPermaLink="true">https://beakerbrowser.com/2017/05/25/beaker-0-7-0.html</guid>
        
        
      </item>
    
      <item>
        <title>0.6.1: Dat-DNS</title>
        <description>&lt;p&gt;Hey folks! Got a few fresh updates for you today. First, a few handy links:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/beakerbrowser/dathttpd&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dathttpd&lt;/code&gt;&lt;/a&gt; - Host websites over Dat and HTTPS&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/beakerbrowser/bkr&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bkr&lt;/code&gt;&lt;/a&gt; - Beaker’s command line tool&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://beakerbrowser.com/docs/index.html&quot;&gt;New Beaker documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;dat-dns&quot;&gt;Dat DNS&lt;/h2&gt;

&lt;p&gt;You can now give Dat sites a DNS shortname. You can use the new &lt;a href=&quot;https://github.com/beakerbrowser/dathttpd&quot;&gt;dathttpd web server&lt;/a&gt; to host your sites from the cloud, and take advantage of this new feature (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/wiki/Authenticated-Dat-URLs-and-HTTPS-to-Dat-Discovery&quot;&gt;read the spec here)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Some sites to try out:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;dat://hostless.website&quot;&gt;dat://hostless.website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;dat://paulfrazee.com&quot;&gt;dat://paulfrazee.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;dat://taravancil.com&quot;&gt;dat://taravancil.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;dat://www.datprotocol.com&quot;&gt;dat://www.datprotocol.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;dathttpd&quot;&gt;DatHTTPD&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/beakerbrowser/dathttpd&quot;&gt;dathttpd web server&lt;/a&gt; lets people visit your site over dat with a DNS shortname in Beaker, and over HTTPS in other browsers. Automatic TLS provision with LetsEncrypt, support for multiple Dat sites and for reverse proxying, and easy-to-setup analytics. Check it out!&lt;/p&gt;

&lt;h2 id=&quot;improved-bkrhttpsgithubcombeakerbrowserbkr-command-line&quot;&gt;Improved &lt;a href=&quot;https://github.com/beakerbrowser/bkr&quot;&gt;bkr&lt;/a&gt; command-line&lt;/h2&gt;

&lt;p&gt;There were too many improvements to list for &lt;a href=&quot;https://github.com/beakerbrowser/bkr&quot;&gt;bkr&lt;/a&gt;, so I’ll just show my favorite new command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;bkr clone dat://paulfrazee.com ./paulfrazee
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You’ll find bkr is now much more usable and intuitive.&lt;/p&gt;

&lt;h2 id=&quot;new-start-page&quot;&gt;New start page&lt;/h2&gt;

&lt;p&gt;We split out the builtin views (history, sites library, downloads, and etc) into individual pages, so that your new-tab interface would load faster. Then we put in a &lt;em&gt;new&lt;/em&gt; new tab page.&lt;/p&gt;

&lt;h2 id=&quot;new-docs-site&quot;&gt;New docs site&lt;/h2&gt;

&lt;p&gt;We took a couple minutes to bedazzle our docs site, so &lt;a href=&quot;https://beakerbrowser.com/docs/index.html&quot;&gt;check it out&lt;/a&gt;. You can find a lot more information about Beaker as a whole, plus we’ve improved our guides for creating sites and hosting.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://beakerbrowser.com/docs/index.html&quot;&gt;beakerbrowser.com/docs&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;fixes-and-smaller-updates&quot;&gt;Fixes and smaller updates&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Icon now looks good in Windows. Thanks &lt;a href=&quot;https://github.com/pmario&quot;&gt;@pmario&lt;/a&gt; &lt;a href=&quot;https://github.com/beakerbrowser/beaker/pull/297&quot;&gt;(#297)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;UTF8 now renders correctly in Dat file listings &lt;a href=&quot;https://github.com/beakerbrowser/beaker/pull/295&quot;&gt;(#295)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Bumped internal &lt;a href=&quot;https://developers.google.com/web/updates/2016/10/nic54&quot;&gt;Chromium to 54&lt;/a&gt;. Web Components v1!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/beakerbrowser/beaker/commit/545c2c5dbb6c327c18da1a93d61729b1a79bfba9&quot;&gt;Added help menu for non-OSX operating systems&lt;/a&gt;. Thanks &lt;a href=&quot;https://github.com/pmario&quot;&gt;@pmario&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/beakerbrowser/beaker/commit/330609f5835b27b6d66c25a82d35921283f579db&quot;&gt;Fixed some tab-rendering issues&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/beakerbrowser/beaker/commit/a643300daa0615bf9574d36dd0b2fdfd013e23ad&quot;&gt;Tab dragging now works better&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/beakerbrowser/beaker/commit/e8110c137047d25d284ae30948fc26c0df376bd9&quot;&gt;Autofocused elements now get focus on page load&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 22 Feb 2017 00:00:00 -0600</pubDate>
        <link>https://beakerbrowser.com/2017/02/22/beaker-0-6-1.html</link>
        <guid isPermaLink="true">https://beakerbrowser.com/2017/02/22/beaker-0-6-1.html</guid>
        
        
      </item>
    
      <item>
        <title>0.6.0: UX improvements</title>
        <description>&lt;p&gt;Excited for a new release, folks!&lt;/p&gt;

&lt;p&gt;A big part of this release was about improving the UX. We’re thinking very specifically about how we want Beaker, as a product, to work. We took inspiration from a lot of different products, including CodePen, GitHub, and even iTunes.&lt;/p&gt;

&lt;p&gt;The other major half of this release was making fixes to the Dat protocol. We’ve improved our debugging techniques, and found some key issues that we’ve patched.&lt;/p&gt;

&lt;h2 id=&quot;new-navbar&quot;&gt;New navbar&lt;/h2&gt;

&lt;p&gt;When you’re on a Dat site, you now will see a bunch of new buttons in the URL bar. Most of these functions already existed, but they were hidden away behind two clicks (or more). We realized, despite the UI clutter, it’s much better to have these tools easy to access and discover.&lt;/p&gt;

&lt;p&gt;The Save button adds the site to your Library, where it stays for offline access and serves itself on the p2p network. If you like a site, and want to keep it forever, that’s the button for you. For simplicity’s sake, we’ve also decided that saving a site makes Beaker serve it too. (We’ll keep evaluating that choice as we go.)&lt;/p&gt;

&lt;p&gt;The Fork button lets you create a new copy of the site, under your control, which you can modify and share. That’s the foundation of our goal for a more participatory Web, and we wanted it to be right there for you to use.&lt;/p&gt;

&lt;p&gt;Live-reloading is insanely handy when you’re doing site-development. I now author static sites by running &lt;code class=&quot;highlighter-rouge&quot;&gt;bkr dev&lt;/code&gt; in a new directory to spawn a temporary, file-watching dat. Then I turn on live reloading and start writing the html/css/js. It’s really nice. (You can get bkr via npm, https://www.npmjs.com/package/bkr.)&lt;/p&gt;

&lt;h2 id=&quot;new-sites-library&quot;&gt;New Sites Library&lt;/h2&gt;

&lt;p&gt;We were never very happy with the old saved-sites interface, so when we decided to make some UX improvements, we took the opportunity to overhaul the interface entirely. Somewhere along the way we discovered whitespace and thin fonts, and the new Sites Library is the result of that.&lt;/p&gt;

&lt;h2 id=&quot;fixes-to-the-dat-protocol&quot;&gt;Fixes to the Dat Protocol&lt;/h2&gt;

&lt;p&gt;We had a couple of sneaky issues that, I’m happy to say, have been solved.&lt;/p&gt;

&lt;p&gt;The two most significant issues we discovered had to do with swarm-discovery, which I had mis-implemented in Beaker, and replication, which was failing due to an mistake in the protocol itself. The latter took some serious debugging, and resulted in a solution called “read-verification on replication.”&lt;/p&gt;

&lt;p&gt;Each of these commits include a long message explaining them, in detail:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Read-verification on replication (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/commits/1a8b345f40b367453877382fa5787de5536dae95&quot;&gt;1a8b345f40b367453877382fa5787de5536dae95&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Saved Dats are not autodownloaded (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/commits/eaab8b28d1d0244b8a500377302452eb762282a5&quot;&gt;eaab8b28d1d0244b8a500377302452eb762282a5&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Use individual swarms for dats (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/commits/77e9f721acbc3a1b72bcf5d746144769d0261a00&quot;&gt;77e9f721acbc3a1b72bcf5d746144769d0261a00&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Saved archives are now hosted automatically (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/commits/33fbb2e3cbe233fd9010049c729121424e7e640e&quot;&gt;33fbb2e3cbe233fd9010049c729121424e7e640e&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We’ll keep working on Dat’s reliability, and we should be releasing a self-deployable Dat hosting server soon to help with uptime.&lt;/p&gt;

&lt;h2 id=&quot;other-changes&quot;&gt;Other Changes&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Added &lt;code class=&quot;highlighter-rouge&quot;&gt;beaker:internal-archives&lt;/code&gt; page to provide information about the actively-swarmed Dats. This will help developers comprehend logs of dat traffic, which use a lot of different keys (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/commits/6bcd28cc1938d35e4f45bc54a08ee9b18e7fb5ad&quot;&gt;6bcd28cc1938d35e4f45bc54a08ee9b18e7fb5ad&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Show logo in Ubuntu startbar (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/commits/b8647ef85b46c4ce296e5d1d5b13c1593383261f&quot;&gt;b8647ef85b46c4ce296e5d1d5b13c1593383261f&lt;/a&gt;). Thanks &lt;a href=&quot;https://github.com/pmario&quot;&gt;@pmario&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;Support for ctrl+mousewheel to zoom in/out (&lt;a href=&quot;https://github.com/beakerbrowser/beaker/commits/9f6f137181a6ca0852822ae452410be6f8afeb2a&quot;&gt;9f6f137181a6ca0852822ae452410be6f8afeb2a&lt;/a&gt;). Thanks &lt;a href=&quot;https://github.com/pmario&quot;&gt;@pmario&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 20 Jan 2017 00:00:00 -0600</pubDate>
        <link>https://beakerbrowser.com/2017/01/20/beaker-0-6-0.html</link>
        <guid isPermaLink="true">https://beakerbrowser.com/2017/01/20/beaker-0-6-0.html</guid>
        
        
      </item>
    
  </channel>
</rss>
